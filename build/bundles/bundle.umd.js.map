{"version":3,"file":"bundle.umd.js","sources":["../../index.js"],"sourcesContent":["const defaultOptions = {\n  separator: ',',\n  decimalPlaces: null,\n  includeZero: false\n};\n\nexport const toNumber = (value, { separator } = defaultOptions) => {\n  const allowedTypes = { string: '[object String]', number: '[object Number]' };\n  const type = Object.prototype.toString.call(value);\n\n  if (!Object.values(allowedTypes).includes(type)) {\n    return false;\n  }\n\n  if (+value === Infinity || +value === -Infinity) {\n    return +value;\n  }\n\n  if (type === allowedTypes.number) {\n    return value - value === 0 && !isNaN(value) && value;\n  }\n\n  // We're now dealing with a string\n  value = value.trim();\n  if (value === '') {\n    return false;\n  }\n\n  value = value.replace(new RegExp(separator, 'g'), '');\n\n  value = +value;\n\n  return value - value === 0 && !isNaN(value) && value;\n};\n\nconst testInfinite = (value) => {\n  return Number.isFinite ? !Number.isFinite(value) : !isFinite(value);\n};\n\nexport const toInt = (value, { separator } = defaultOptions) => {\n  const number = toNumber(value, { separator });\n\n  if (testInfinite(number)) {\n    return number;\n  }\n\n  return number && parseInt(number, 10);\n};\n\nexport const toFloat = (value, { decimalPlaces, separator } = defaultOptions) => {\n  const number = toNumber(value, { separator });\n\n  if (testInfinite(number)) {\n    return number;\n  }\n\n  if (!decimalPlaces && decimalPlaces !== 0) {\n    return number;\n  }\n\n  return number && parseFloat(number.toFixed(decimalPlaces));\n};\n\nexport const toPositiveInt = (value, { includeZero, separator } = defaultOptions) => {\n  const number = toInt(value, { separator });\n  const lowestNumber = includeZero ? 0 : 1;\n\n  return number >= lowestNumber && number;\n};\n\nexport const toPositiveFloat = (value, { includeZero, decimalPlaces, separator } = defaultOptions) => {\n  const number = toFloat(value, { decimalPlaces, separator });\n\n  const isPositive = includeZero ? number >= 0 : number > 0;\n\n  return isPositive && number;\n};\n\nexport const toNegativeInt = (value, { includeZero, separator } = defaultOptions) => {\n  const number = toInt(value, { separator });\n  const highestNumber = includeZero ? 0 : -1;\n\n  return number <= highestNumber && number;\n};\n\nexport const toNegativeFloat = (value, { includeZero = false, decimalPlaces, separator } = defaultOptions) => {\n  const number = toFloat(value, { decimalPlaces, separator });\n  const isNegative = includeZero ? number <= 0 : number < 0;\n\n  return isNegative && number;\n};\n"],"names":["defaultOptions","separator","decimalPlaces","includeZero","toNumber","value","allowedTypes","string","number","type","Object","prototype","toString","call","values","includes","Infinity","isNaN","trim","replace","RegExp","testInfinite","Number","isFinite","toInt","parseInt","toFloat","parseFloat","toFixed","toPositiveInt","lowestNumber","toPositiveFloat","isPositive","toNegativeInt","highestNumber","toNegativeFloat","isNegative"],"mappings":"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"}