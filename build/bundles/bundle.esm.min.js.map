{"version":3,"file":"bundle.esm.min.js","sources":["../../index.js"],"sourcesContent":["const defaultOptions = {\n  separator: ',',\n  decimalPlaces: null,\n  includeZero: false\n};\n\nexport const toNumber = (value, { separator } = defaultOptions) => {\n  const allowedTypes = { string: '[object String]', number: '[object Number]' };\n  const type = Object.prototype.toString.call(value);\n\n  if (!Object.values(allowedTypes).includes(type)) {\n    return false;\n  }\n\n  if (+value === Infinity || +value === -Infinity) {\n    return +value;\n  }\n\n  if (type === allowedTypes.number) {\n    return value - value === 0 && !isNaN(value) && value;\n  }\n\n  // We're now dealing with a string\n  value = value.trim();\n  if (value === '') {\n    return false;\n  }\n\n  value = value.replace(new RegExp(separator, 'g'), '');\n\n  value = +value;\n\n  return value - value === 0 && !isNaN(value) && value;\n};\n\nconst testInfinite = (value) => {\n  return Number.isFinite ? !Number.isFinite(value) : !isFinite(value);\n};\n\nexport const toInt = (value, { separator } = defaultOptions) => {\n  const number = toNumber(value, { separator });\n\n  if (testInfinite(number)) {\n    return number;\n  }\n\n  return number && parseInt(number, 10);\n};\n\nexport const toFloat = (value, { decimalPlaces, separator } = defaultOptions) => {\n  const number = toNumber(value, { separator });\n\n  if (testInfinite(number)) {\n    return number;\n  }\n\n  if (!decimalPlaces && decimalPlaces !== 0) {\n    return number;\n  }\n\n  return number && parseFloat(number.toFixed(decimalPlaces));\n};\n\nexport const toPositiveInt = (value, { includeZero, separator } = defaultOptions) => {\n  const number = toInt(value, { separator });\n  const lowestNumber = includeZero ? 0 : 1;\n\n  return number >= lowestNumber && number;\n};\n\nexport const toPositiveFloat = (value, { includeZero, decimalPlaces, separator } = defaultOptions) => {\n  const number = toFloat(value, { decimalPlaces, separator });\n\n  const isPositive = includeZero ? number >= 0 : number > 0;\n\n  return isPositive && number;\n};\n\nexport const toNegativeInt = (value, { includeZero, separator } = defaultOptions) => {\n  const number = toInt(value, { separator });\n  const highestNumber = includeZero ? 0 : -1;\n\n  return number <= highestNumber && number;\n};\n\nexport const toNegativeFloat = (value, { includeZero = false, decimalPlaces, separator } = defaultOptions) => {\n  const number = toFloat(value, { decimalPlaces, separator });\n  const isNegative = includeZero ? number <= 0 : number < 0;\n\n  return isNegative && number;\n};\n"],"names":["defaultOptions","separator","decimalPlaces","includeZero","toNumber","value","allowedTypes","string","number","type","Object","prototype","toString","call","values","includes","Infinity","isNaN","trim","replace","RegExp","testInfinite","Number","isFinite","toInt","parseInt","toFloat","parseFloat","toFixed","toPositiveInt","lowestNumber","toPositiveFloat","isPositive","toNegativeInt","highestNumber","toNegativeFloat","isNegative"],"mappings":"AAAA,IAAMA,EAAiB,CACrBC,UAAW,IACXC,cAAe,KACfC,aAAa,GAGFC,EAAW,SAACC,gEAAuBL,EAAdC,IAAAA,UAC1BK,EAAe,CAAEC,OAAQ,kBAAmBC,OAAQ,mBACpDC,EAAOC,OAAOC,UAAUC,SAASC,KAAKR,WAEvCK,OAAOI,OAAOR,GAAcS,SAASN,MAIrCJ,GAAUW,EAAAA,IAAaX,IAAWW,EAAAA,GAC7BX,EAGNI,IAASH,EAAaE,OACjBH,EAAQA,GAAU,IAAMY,MAAMZ,IAAUA,EAKnC,MADdA,EAAQA,EAAMa,WAOdb,IAFAA,EAAQA,EAAMc,QAAQ,IAAIC,OAAOnB,EAAW,KAAM,MAInCI,GAAU,IAAMY,MAAMZ,IAAUA,KAG3CgB,EAAe,SAAChB,UACbiB,OAAOC,UAAYD,OAAOC,SAASlB,IAAUkB,SAASlB,IAGlDmB,EAAQ,SAACnB,gEAAuBL,EAAdC,IAAAA,UACvBO,EAASJ,EAASC,EAAO,CAAEJ,UAAAA,WAE7BoB,EAAab,GACRA,EAGFA,GAAUiB,SAASjB,EAAQ,KAGvBkB,EAAU,SAACrB,gEAAsCL,EAA7BE,IAAAA,cAAeD,IAAAA,UACxCO,EAASJ,EAASC,EAAO,CAAEJ,UAAAA,WAE7BoB,EAAab,GACRA,EAGJN,GAAmC,IAAlBA,EAIfM,GAAUmB,WAAWnB,EAAOoB,QAAQ1B,IAHlCM,GAMEqB,EAAgB,SAACxB,gEAAoCL,EAA3BG,IAAAA,YAAaF,IAAAA,UAC5CO,EAASgB,EAAMnB,EAAO,CAAEJ,UAAAA,IACxB6B,EAAe3B,EAAc,EAAI,SAEhCK,GAAUsB,GAAgBtB,GAGtBuB,EAAkB,SAAC1B,gEAAmDL,EAA1CG,IAAAA,YAAaD,IAAAA,cAAeD,IAAAA,UAC7DO,EAASkB,EAAQrB,EAAO,CAAEH,cAAAA,EAAeD,UAAAA,IAEzC+B,EAAa7B,EAAcK,GAAU,EAAIA,EAAS,SAEjDwB,GAAcxB,GAGVyB,EAAgB,SAAC5B,gEAAoCL,EAA3BG,IAAAA,YAAaF,IAAAA,UAC5CO,EAASgB,EAAMnB,EAAO,CAAEJ,UAAAA,IACxBiC,EAAgB/B,EAAc,GAAK,SAElCK,GAAU0B,GAAiB1B,GAGvB2B,EAAkB,SAAC9B,gEAA2DL,MAAlDG,YAAAA,gBAAqBD,IAAAA,cAAeD,IAAAA,UACrEO,EAASkB,EAAQrB,EAAO,CAAEH,cAAAA,EAAeD,UAAAA,IACzCmC,EAAajC,EAAcK,GAAU,EAAIA,EAAS,SAEjD4B,GAAc5B"}